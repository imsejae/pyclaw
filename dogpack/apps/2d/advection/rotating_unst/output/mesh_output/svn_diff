Index: input2D.data
===================================================================
--- input2D.data	(revision 1465)
+++ input2D.data	(working copy)
@@ -1,5 +1,5 @@
 Unstructured          : Grid type (Structured vs. Unstructured)
-0.2                  : Initial grid spacing (H0)
+0.05                  : Initial grid spacing (H0)
 50000                 : Maximum allowed iterations
 ----------------------------------------------------------------
 Bounding box:
Index: /home/scott/MeshGenC++/lib/2d/MeshEdgeData.cpp
===================================================================
--- /home/scott/MeshGenC++/lib/2d/MeshEdgeData.cpp	(revision 86)
+++ /home/scott/MeshGenC++/lib/2d/MeshEdgeData.cpp	(working copy)
@@ -58,7 +58,8 @@
 
       xmid = 0.5*( p[tp1].x + p[tp2].x );
       ymid = 0.5*( p[tp1].y + p[tp2].y );
-      edge_label[k-1] = (600.0/hmin)*xmid + ymid;
+//      edge_label[k-1] = (600.0/hmin)*xmid + ymid;
+      edge_label[k-1] = xmid + 1.0e4*1000.0*(ymid+(1.0));
 
       // look at second edge
       k = k+1;
@@ -72,7 +73,8 @@
 
       xmid = 0.5*( p[tp1].x + p[tp3].x );
       ymid = 0.5*( p[tp1].y + p[tp3].y );
-      edge_label[k-1] = (600.0/hmin)*xmid + ymid;
+//      edge_label[k-1] = (600.0/hmin)*xmid + ymid;
+      edge_label[k-1] = xmid + 1.0e4*1000.0*(ymid+(1.0));
     
       // look at third edge
       k = k+1;
@@ -86,7 +88,8 @@
 
       xmid = 0.5*( p[tp2].x + p[tp3].x );
       ymid = 0.5*( p[tp2].y + p[tp3].y );
-      edge_label[k-1] = (600.0/hmin)*xmid + ymid;
+//     edge_label[k-1] = (600.0/hmin)*xmid + ymid;
+      edge_label[k-1] = xmid + 1.0e4*1000.0*(ymid+(1.0));
     }
 
   // loop over each ghost element
@@ -112,7 +115,8 @@
 	  
 	  xmid = 0.5*( p[tp1].x + p[tp2].x );
 	  ymid = 0.5*( p[tp1].y + p[tp2].y );
-	  edge_label[k-1] = (600.0/hmin)*xmid + ymid;
+//	  edge_label[k-1] = (600.0/hmin)*xmid + ymid;
+      edge_label[k-1] = xmid + 1.0e4*1000.0*(ymid+(1.0));
 	}
       
       // look at second edge
@@ -131,7 +135,8 @@
 	  
 	  xmid = 0.5*( p[tp1].x + p[tp3].x );
 	  ymid = 0.5*( p[tp1].y + p[tp3].y );
-	  edge_label[k-1] = (600.0/hmin)*xmid + ymid;
+//	  edge_label[k-1] = (600.0/hmin)*xmid + ymid;
+      edge_label[k-1] = xmid + 1.0e4*1000.0*(ymid+(1.0));
 	}
 	 
       // look at third edge
@@ -150,7 +155,8 @@
 
 	  xmid = 0.5*( p[tp2].x + p[tp3].x );
 	  ymid = 0.5*( p[tp2].y + p[tp3].y );
-	  edge_label[k-1] = (600.0/hmin)*xmid + ymid;
+//	  edge_label[k-1] = (600.0/hmin)*xmid + ymid;
+      edge_label[k-1] = xmid + 1.0e4*1000.0*(ymid+(1.0));
 	}
     }
 
Index: /home/scott/MeshGenC++/lib/2d/meshgen2D.cpp
===================================================================
--- /home/scott/MeshGenC++/lib/2d/meshgen2D.cpp	(revision 86)
+++ /home/scott/MeshGenC++/lib/2d/meshgen2D.cpp	(working copy)
@@ -183,7 +183,7 @@
     for (int j=1; j<=3; j++)
       {  tedge_orientation->set(i,j, 0 );  }
   numedges = 1;
-  
+
   MeshEdgeData(h0,numpts,numtri,numghost,p,t,area,
 	       proper_ghostcell,numedges,
    	       edge,tedge,eelem,enode,
